#!/bin/sh

# change volume

# use second argument as step if given, otherwise default to 2
[ -n "$2" ] && STEP="$2" || STEP="2"

SINK=$(pactl get-default-sink)

case "$1" in
  "togglemute")
    pactl set-sink-mute "$SINK" toggle
    ;;
  "up")
    pactl set-sink-volume "$SINK" "+${STEP}%"
    ;;
  "down")
    pactl set-sink-volume "$SINK" "-${STEP}%"
    ;;
  *)
    if [ "$1" -ge 0 ] && [ "$1" -le 100 ]; then
      pactl set-sink-volume "$SINK" "${1}%"
    fi
    ;;
esac

VOLUME=$(pactl get-sink-volume "$SINK" | awk '{ print $5 }' | sed 's/%//')
[ "$VOLUME" -gt 100 ] && pactl set-sink-volume "$SINK" 100%
[ "$VOLUME" -lt 0 ] && pactl set-sink-volume "$SINK" 0%


# send notification

notify () {
  dunstify -a "chvol" -u low -r 444 -h int:value:"$VOLUME" "Volume: ${VOLUME}%" -t 2000 # -i "$1"
}

notify

exit 0

MUTED=$(pactl get-sink-mute "$SINK" | awk '{ print $2 }')

if [ "$MUTED" = "yes" ]; then
  notify volume-mute
elif [ "$VOLUME" -eq 0 ]; then
  notify volume-off
elif [ "$VOLUME" -lt 30 ]; then
  notify volume-low
elif [ "$VOLUME" -lt 80 ]; then
  notify volume-mid
else
  notify volume-high
fi
